#!/usr/bin/env tclsh

set ::tcl_precision 7

################################################################################
# COMMAND LINE
#
# if there are command line arguments, show result in terminal and exit
if {$::argc > 0} {
  if ![catch {set result [expr [string map {/ *1.0/} $::argv]]}] {puts $result}
  exit
}

# else, start GUI
package require Tk

################################################################################
# VARIABLES
#
namespace eval tCalc {
  variable on_top    false
  variable resizable 0
  variable entry     {}
  variable hlist     [list]
  variable hindex    0
}

################################################################################
# PROCEDURES
#
proc showHelp {} {
  tk_messageBox -title "tCalc Help" -icon info -type ok -parent . \
    -message "tCalc Help" -detail \
"Bindings:
F1:\tHelp
F2:\tOn Top
Up:\tHistory: Previous
Down:\tHistory: Select
Enter:\tCalculate
Escape:\tClear
Ctrl+Q:\tExit
Menu:\tRight Click

Special Operators:
**\tpower
%\tmodulus

General Functions:
log\tlog10
sqrt\tisqrt
hypot\texp
pow\tfmod
abs\tround
min\tmax
floor\tceil

Trigonometric Functions:
sin\tasin\tsinh\t
cos\tacos\tcosh\t
tan\tatan\ttanh\t"
}

proc historyBackward {widget} {
  incr tCalc::hindex -1
  if {$tCalc::hindex < 0} {
    set tCalc::hindex [expr [llength $tCalc::hlist] -1]
  }
  set tCalc::entry [lindex $tCalc::hlist $tCalc::hindex]
  $widget xview end
  $widget icursor end
}

proc clearEntry {widget} {
  set tCalc::entry ""
  $widget configure -style valid.TCombobox
}

proc calculateResult {widget} {
  if {$tCalc::entry ni $tCalc::hlist} {
    lappend tCalc::hlist $tCalc::entry
  }
  set tCalc::hindex [llength $tCalc::hlist]
  if [catch {set tCalc::entry [expr [string map {/ *1.0/} $tCalc::entry]]}] {
    $widget configure -style error.TCombobox
  } else {
    $widget configure -style valid.TCombobox
  }
  $widget xview end
  $widget icursor end
}

proc clickButton {widget key} {
  $widget insert insert $key
}

################################################################################
# MAIN MENU
#
proc createMenu {} {
  option add *tearOff false
  menu .menu
    .menu add command -label "Help..." -underline 0 \
      -accelerator "F1" -command {showHelp}
    .menu add separator
    .menu add checkbutton -label "On Top" -underline 0 \
      -accelerator "F2" \
      -variable tCalc::on_top -onvalue "true" -offvalue "false" \
      -command {wm attributes . -topmost $tCalc::on_top}
    .menu add checkbutton -label "Resizable" -underline 4 \
      -variable tCalc::resizable -onvalue 1 -offvalue 0 \
      -command {wm resizable . $tCalc::resizable 0}
    .menu add separator
    .menu add command -label "Cut" \
      -underline 2 -accelerator "Ctrl+X" \
      -command {event generate .entry <<Cut>>}
    .menu add command -label "Copy" \
      -underline 0 -accelerator "Ctrl+C" \
      -command {event generate .entry <<Copy>>}
    .menu add command -label "Paste" \
      -underline 0 -accelerator "Ctrl+V" \
      -command {event generate .entry <<Paste>>}
    .menu add separator
    .menu add cascade -label "Precision" -underline 1 \
      -menu [menu .menu.precision]
      for {set i 0} {$i <= 9} {incr i} {
        .menu.precision add radiobutton -label $i -underline 0 \
          -variable ::tcl_precision -value $i
      }
    .menu add separator
    .menu add command -label "Exit" \
      -underline 1 -accelerator "Ctrl+Q" \
      -command {exit}
}

################################################################################
# WIDGETS
#
proc createWidgets {} {
  ttk::style configure valid.TCombobox -fieldbackground white
  ttk::style configure error.TCombobox -fieldbackground red

  ttk::combobox .entry -justify right -style valid.TCombobox \
    -textvariable tCalc::entry -values $tCalc::hlist \
    -postcommand {.entry configure -values $tCalc::hlist}
  grid .entry -columnspan 5 -sticky we -padx 1 -pady 1
  grid columnconfigure . .entry -weight 1

  set calc_buttons {
    {7 8 9 ( )}
    {4 5 6 * /}
    {1 2 3 + -}
    {C 0 . =}
  }
  set n 0
  set buttons [list]
  foreach row $calc_buttons {
    foreach key $row {
      switch -- $key {
        =       {set command [list calculateResult .entry]}
        C       {set command [list clearEntry .entry]}
        default {set command [list clickButton .entry $key]}
      }
      lappend buttons [tk::button ".[incr n]" -text $key -takefocus 0 \
        -command $command]
    }
    grid {*}$buttons -sticky we -padx 1 -pady 1
  }
  grid .$n -columnspan 2
}

################################################################################
# BINDINGS
#
proc createBindings {} {
  bind all <3>         {tk_popup .menu %X %Y}
  bind all <F1>        {.menu invoke "Help..."}
  bind all <F2>        {.menu invoke "On Top"}
  bind all <Escape>    {clearEntry %W}
  bind all <Control-q> {exit}
  bind all <Control-a> {event generate %W <Tab>}
  bind all <KP_Enter>  {event generate %W <Return>}

  bind .entry <Return>             {calculateResult %W}
  bind .entry <Up>                 {historyBackward %W}
  bind .entry <<ComboboxSelected>> {%W selection clear}
}

################################################################################
# MAIN PROGRAM
#
createMenu
createWidgets
createBindings
focus .entry

wm title     . "tCalc"
wm minsize   . 100 100
wm resizable . $tCalc::resizable 0
wm protocol  . WM_DELETE_WINDOW {exit}
